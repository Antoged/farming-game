import asyncio
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import BOT_TOKEN, WEBAPP_URL, SEEDS, WEATHER_EFFECTS
from game_logic import GameLogic
import threading
import time
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

game = GameLogic()

class GameScheduler:
    def __init__(self):
        self.running = False
    
    def start(self):
        self.running = True
        threading.Thread(target=self._run_scheduler, daemon=True).start()
    
    def stop(self):
        self.running = False
    
    def _run_scheduler(self):
        while self.running:
            try:
                # –û–±–Ω–æ–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                game.refresh_shop()
                logger.info("–ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
                
                # –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
                weather_type, weather_data = game.change_weather()
                logger.info(f"–ü–æ–≥–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {weather_data['name']}")
                
                # –ñ–¥–∞—Ç—å 5 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {e}")
                time.sleep(60)  # –ñ–¥–∞—Ç—å –º–∏–Ω—É—Ç—É –ø—Ä–∏ –æ—à–∏–±–∫–µ

scheduler = GameScheduler()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞
    player = game.db.get_or_create_player(user.id, user.username)
    
    # –°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [
            InlineKeyboardButton(
                "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É", 
                web_app=WebAppInfo(url=f"{WEBAPP_URL}?user_id={user.id}")
            )
        ],
        [
            InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="stats"),
            InlineKeyboardButton("üõí –ú–∞–≥–∞–∑–∏–Ω", callback_data="shop")
        ],
        [
            InlineKeyboardButton("üå§Ô∏è –ü–æ–≥–æ–¥–∞", callback_data="weather"),
            InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –§–µ—Ä–º–µ—Ä—Å–∫—É—é –∏–≥—Ä—É, {user.first_name}!

üå± –í—ã –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ñ–µ—Ä–º–µ—Ä. –£ –≤–∞—Å –µ—Å—Ç—å:
üí∞ {player['money']} –º–æ–Ω–µ—Ç
üìä –£—Ä–æ–≤–µ–Ω—å {player['level']}

üéØ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –ù–∞–∂–º–∏—Ç–µ "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É" —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É
2. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –°–∞–∂–∞–π—Ç–µ –∏—Ö –Ω–∞ —É—á–∞—Å—Ç–∫–∏ —Ñ–µ—Ä–º—ã
4. –°–æ–±–∏—Ä–∞–π—Ç–µ —É—Ä–æ–∂–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ
5. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å!

üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —Ü–µ–Ω—ã
üõí –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚è∞ –£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

–ù–∞–∂–º–∏—Ç–µ "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
"""
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    user = query.from_user
    player = game.db.get_or_create_player(user.id, user.username)
    
    if query.data == "stats":
        stats = game.get_player_stats(user.id)
        stats_text = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ {user.first_name}:

üí∞ –ú–æ–Ω–µ—Ç—ã: {stats['money']}
üìä –£—Ä–æ–≤–µ–Ω—å: {stats['level']}
‚≠ê –û–ø—ã—Ç: {stats['experience']}
üì¶ –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {stats['inventory_count']}
üå± –ü–æ—Å–∞–∂–µ–Ω–æ –∫—É–ª—å—Ç—É—Ä: {stats['total_planted']}
üåæ –°–æ–±—Ä–∞–Ω–æ —É—Ä–æ–∂–∞—è: {stats['total_harvested']}
"""
        await query.edit_message_text(stats_text)
        
    elif query.data == "shop":
        shop_items = game.get_shop_items()
        shop_text = "üõí –ú–∞–≥–∞–∑–∏–Ω —Å–µ–º—è–Ω:\n\n"
        
        for item in shop_items:
            emoji = SEEDS[item['seed_type']]['emoji']
            name = item['name']
            price = item['price']
            shop_text += f"{emoji} {name}: üí∞{price}\n"
        
        shop_text += "\n–ù–∞–∂–º–∏—Ç–µ 'üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É' —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!"
        await query.edit_message_text(shop_text)
        
    elif query.data == "weather":
        current_weather = game.get_current_weather_info()
        weather_emoji = WEATHER_EFFECTS[current_weather['type']]['emoji']
        weather_name = current_weather['name']
        
        weather_text = f"""
üå§Ô∏è –¢–µ–∫—É—â–∞—è –ø–æ–≥–æ–¥–∞:

{weather_emoji} {weather_name}

üìà –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–æ—Å—Ç–∞: x{current_weather['growth_multiplier']}
üí∞ –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω: x{current_weather['price_multiplier']}

–ü–æ–≥–æ–¥–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Å–∫–æ—Ä–æ—Å—Ç—å —Ä–æ—Å—Ç–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —Ü–µ–Ω—ã –Ω–∞ —Ä—ã–Ω–∫–µ!
"""
        await query.edit_message_text(weather_text)
        
    elif query.data == "help":
        help_text = """
‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ:

üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/farm - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ—Ä–º–æ–π
/market - –†—ã–Ω–æ–∫
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üå± –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É"
2. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –°–∞–∂–∞–π—Ç–µ –∏—Ö –Ω–∞ —É—á–∞—Å—Ç–∫–∏ —Ñ–µ—Ä–º—ã
4. –ñ–¥–∏—Ç–µ —Ä–æ—Å—Ç–∞ (–≤—Ä–µ–º—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫—É–ª—å—Ç—É—Ä—ã)
5. –°–æ–±–∏—Ä–∞–π—Ç–µ —É—Ä–æ–∂–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ
6. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å!

üå§Ô∏è –ü–æ–≥–æ–¥–∞:
- –°–æ–ª–Ω–µ—á–Ω–æ: +20% —Ä–æ—Å—Ç, +10% —Ü–µ–Ω—ã
- –î–æ–∂–¥–ª–∏–≤–æ: +50% —Ä–æ—Å—Ç, +30% —Ü–µ–Ω—ã
- –û–±–ª–∞—á–Ω–æ: –æ–±—ã—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- –ì—Ä–æ–∑–∞: -20% —Ä–æ—Å—Ç, -10% —Ü–µ–Ω—ã

üõí –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚è∞ –£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""
        await query.edit_message_text(help_text)

async def farm_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /farm - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Ñ–µ—Ä–º—ã"""
    user = update.effective_user
    farm_status = game.get_farm_status(user.id)
    
    farm_text = f"üå± –§–µ—Ä–º–∞ –∏–≥—Ä–æ–∫–∞ {user.first_name}:\n\n"
    
    for i, plot in enumerate(farm_status):
        if plot['status'] == 'empty':
            farm_text += f"üå± –£—á–∞—Å—Ç–æ–∫ {i+1}: –ü—É—Å—Ç–æ–π\n"
        elif plot['status'] == 'planted':
            time_left = plot['time_left']
            seed_name = plot['seed_name']
            farm_text += f"üåø –£—á–∞—Å—Ç–æ–∫ {i+1}: {seed_name} (–æ—Å—Ç–∞–ª–æ—Å—å {time_left}s)\n"
        elif plot['status'] == 'ready':
            seed_name = plot['seed_name']
            farm_text += f"üåæ –£—á–∞—Å—Ç–æ–∫ {i+1}: {seed_name} - –≥–æ—Ç–æ–≤ –∫ —Å–±–æ—Ä—É!\n"
    
    farm_text += "\n–ù–∞–∂–º–∏—Ç–µ 'üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É' –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è!"
    
    await update.message.reply_text(farm_text)

async def market_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /market - –ø–æ–∫–∞–∑–∞—Ç—å —Ä—ã–Ω–æ–∫"""
    user = update.effective_user
    shop_items = game.get_shop_items()
    
    market_text = f"üõí –†—ã–Ω–æ–∫ —Å–µ–º—è–Ω:\n\n"
    
    for item in shop_items:
        emoji = SEEDS[item['seed_type']]['emoji']
        name = item['name']
        price = item['price']
        market_text += f"{emoji} {name}: üí∞{price}\n"
    
    market_text += "\n–ù–∞–∂–º–∏—Ç–µ 'üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É' —á—Ç–æ–±—ã –∫—É–ø–∏—Ç—å!"
    
    await update.message.reply_text(market_text)

async def stats_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /stats - –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    user = update.effective_user
    stats = game.get_player_stats(user.id)
    
    stats_text = f"""
üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞ {user.first_name}:

üí∞ –ú–æ–Ω–µ—Ç—ã: {stats['money']}
üìä –£—Ä–æ–≤–µ–Ω—å: {stats['level']}
‚≠ê –û–ø—ã—Ç: {stats['experience']}
üì¶ –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {stats['inventory_count']}
üå± –ü–æ—Å–∞–∂–µ–Ω–æ –∫—É–ª—å—Ç—É—Ä: {stats['total_planted']}
üåæ –°–æ–±—Ä–∞–Ω–æ —É—Ä–æ–∂–∞—è: {stats['total_harvested']}

–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å —á—Ç–æ–±—ã —É–ª—É—á—à–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É!
"""
    
    await update.message.reply_text(stats_text)

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ö–æ–º–∞–Ω–¥–∞ /help - –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
    help_text = """
‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ:

üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É
/farm - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–µ—Ä–º–æ–π
/market - –†—ã–Ω–æ–∫
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üå± –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É"
2. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –°–∞–∂–∞–π—Ç–µ –∏—Ö –Ω–∞ —É—á–∞—Å—Ç–∫–∏ —Ñ–µ—Ä–º—ã
4. –ñ–¥–∏—Ç–µ —Ä–æ—Å—Ç–∞ (–≤—Ä–µ–º—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫—É–ª—å—Ç—É—Ä—ã)
5. –°–æ–±–∏—Ä–∞–π—Ç–µ —É—Ä–æ–∂–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ
6. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å!

üå§Ô∏è –ü–æ–≥–æ–¥–∞:
- –°–æ–ª–Ω–µ—á–Ω–æ: +20% —Ä–æ—Å—Ç, +10% —Ü–µ–Ω—ã
- –î–æ–∂–¥–ª–∏–≤–æ: +50% —Ä–æ—Å—Ç, +30% —Ü–µ–Ω—ã
- –û–±–ª–∞—á–Ω–æ: –æ–±—ã—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- –ì—Ä–æ–∑–∞: -20% —Ä–æ—Å—Ç, -10% —Ü–µ–Ω—ã

üõí –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚è∞ –£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
"""
    
    await update.message.reply_text(help_text)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("farm", farm_command))
    application.add_handler(CommandHandler("market", market_command))
    application.add_handler(CommandHandler("stats", stats_command))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.start()
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    print("üåæ –§–µ—Ä–º–µ—Ä—Å–∫–∞—è –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
    application.run_polling()

if __name__ == '__main__':
    main()

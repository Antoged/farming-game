import asyncio
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import BOT_TOKEN, WEBAPP_URL, SEEDS, WEATHER_EFFECTS
from game_logic import GameLogic
import threading
import time
from datetime import datetime, timedelta

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

game = GameLogic()

class GameScheduler:
    def __init__(self):
        self.running = False
    
    def start(self):
        self.running = True
        threading.Thread(target=self._run_scheduler, daemon=True).start()
    
    def stop(self):
        self.running = False
    
    def _run_scheduler(self):
        while self.running:
            try:
                # –û–±–Ω–æ–≤–∏—Ç—å –º–∞–≥–∞–∑–∏–Ω –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                game.refresh_shop()
                logger.info("–ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª–µ–Ω")
                
                # –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ–≥–æ–¥—É –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
                weather_type, weather_data = game.change_weather()
                logger.info(f"–ü–æ–≥–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {weather_data['name']}")
                
                # –ñ–¥–∞—Ç—å 5 –º–∏–Ω—É—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ: {e}")
                time.sleep(60)  # –ñ–¥–∞—Ç—å –º–∏–Ω—É—Ç—É –ø—Ä–∏ –æ—à–∏–±–∫–µ

scheduler = GameScheduler()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –°–æ–∑–¥–∞—Ç—å –∏–ª–∏ –ø–æ–ª—É—á–∏—Ç—å –∏–≥—Ä–æ–∫–∞
    player = game.db.get_or_create_player(user.id, user.username)
    
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ç–æ–ª—å–∫–æ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏
    keyboard = [
        [
            InlineKeyboardButton(
                "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É", 
                web_app=WebAppInfo(url=f"{WEBAPP_URL}?user_id={user.id}")
            )
        ],
        [
            InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data="help")
        ]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    welcome_text = f"""
üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –§–µ—Ä–º–µ—Ä—Å–∫—É—é –∏–≥—Ä—É, {user.first_name}!

üå± –í—ã –Ω–∞—á–∏–Ω–∞—é—â–∏–π —Ñ–µ—Ä–º–µ—Ä. –£ –≤–∞—Å –µ—Å—Ç—å:
üí∞ {player['money']} –º–æ–Ω–µ—Ç
üìä –£—Ä–æ–≤–µ–Ω—å {player['level']}

üéØ –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –ù–∞–∂–º–∏—Ç–µ "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É" —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É
2. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –°–∞–∂–∞–π—Ç–µ –∏—Ö –Ω–∞ —É—á–∞—Å—Ç–∫–∏ —Ñ–µ—Ä–º—ã
4. –°–æ–±–∏—Ä–∞–π—Ç–µ —É—Ä–æ–∂–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ
5. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å!

üå§Ô∏è –ü–æ–≥–æ–¥–∞ –≤–ª–∏—è–µ—Ç –Ω–∞ —Ä–æ—Å—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —Ü–µ–Ω—ã
üõí –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚è∞ –£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

–ù–∞–∂–º–∏—Ç–µ "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É" —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å!
"""
    
    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "help":
        help_text = """
‚ÑπÔ∏è –ü–æ–º–æ—â—å –ø–æ –∏–≥—Ä–µ:

üéÆ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å –∏–≥—Ä—É

üå± –ö–∞–∫ –∏–≥—Ä–∞—Ç—å:
1. –û—Ç–∫—Ä–æ–π—Ç–µ –∏–≥—Ä—É —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É"
2. –ü–æ–∫—É–ø–∞–π—Ç–µ —Å–µ–º–µ–Ω–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ
3. –°–∞–∂–∞–π—Ç–µ –∏—Ö –Ω–∞ —É—á–∞—Å—Ç–∫–∏ —Ñ–µ—Ä–º—ã
4. –ñ–¥–∏—Ç–µ —Ä–æ—Å—Ç–∞ (–≤—Ä–µ–º—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫—É–ª—å—Ç—É—Ä—ã)
5. –°–æ–±–∏—Ä–∞–π—Ç–µ —É—Ä–æ–∂–∞–π –∏ –ø—Ä–æ–¥–∞–≤–∞–π—Ç–µ
6. –ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –¥–µ–Ω—å–≥–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ—Å—å!

üå§Ô∏è –ü–æ–≥–æ–¥–∞:
- –°–æ–ª–Ω–µ—á–Ω–æ: +20% —Ä–æ—Å—Ç, +10% —Ü–µ–Ω—ã
- –î–æ–∂–¥–ª–∏–≤–æ: +50% —Ä–æ—Å—Ç, +30% —Ü–µ–Ω—ã
- –û–±–ª–∞—á–Ω–æ: –æ–±—ã—á–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏
- –ì—Ä–æ–∑–∞: -20% —Ä–æ—Å—Ç, -10% —Ü–µ–Ω—ã

üõí –ú–∞–≥–∞–∑–∏–Ω –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
‚è∞ –£—Ä–æ–∂–∞–π —Ä–∞—Å—Ç–µ—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏

–í—Å–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –∏–≥—Ä–µ —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É "üåæ –ò–≥—Ä–∞—Ç—å –≤ —Ñ–µ—Ä–º—É"!
"""
        await query.edit_message_text(help_text)

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    # –°–æ–∑–¥–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    scheduler.start()
    
    # –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞
    print("üåæ –§–µ—Ä–º–µ—Ä—Å–∫–∞—è –∏–≥—Ä–∞ –∑–∞–ø—É—â–µ–Ω–∞!")
    application.run_polling()

if __name__ == '__main__':
    main()

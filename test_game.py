#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
"""

from game_logic import GameLogic
from config import SEEDS, WEATHER_EFFECTS
import time

def test_game_logic():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤–æ–π –ª–æ–≥–∏–∫–∏...")
    
    game = GameLogic()
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 12345
    
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ –∏–≥—Ä–æ–∫–∞...")
    player = game.db.get_or_create_player(test_user_id, "test_user")
    print(f"‚úÖ –ò–≥—Ä–æ–∫ —Å–æ–∑–¥–∞–Ω: {player['username']}, –î–µ–Ω—å–≥–∏: {player['money']}")
    
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—Å–∞–¥–∫–∏ —Å–µ–º–µ—á–∫–∞...")
    success, message = game.plant_seed(test_user_id, 1, "carrot")
    print(f"–ü–æ—Å–∞–¥–∫–∞ –º–æ—Ä–∫–æ–≤–∏: {message}")
    
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞...")
    game.refresh_shop()
    shop_items = game.get_shop_items_with_names()
    print(f"–¢–æ–≤–∞—Ä–æ–≤ –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {len(shop_items)}")
    for item in shop_items[:3]:  # –ü–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–µ 3
        print(f"  - {item['name']}: {item['price']} –º–æ–Ω–µ—Ç")
    
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–≥–æ–¥—ã...")
    weather_type, weather_data = game.change_weather()
    print(f"–ü–æ–≥–æ–¥–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞: {weather_data['name']}")
    
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∫—É–ø–∫–∏ —Å–µ–º–µ—á–∫–∞...")
    if shop_items:
        seed_type = shop_items[0]['seed_type']
        success, message = game.buy_seed(test_user_id, seed_type)
        print(f"–ü–æ–∫—É–ø–∫–∞ {seed_type}: {message}")
    
    print("\n6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
    stats = game.get_player_stats(test_user_id)
    print(f"–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞:")
    print(f"  - –î–µ–Ω—å–≥–∏: {stats['money']}")
    print(f"  - –£—Ä–æ–≤–µ–Ω—å: {stats['level']}")
    print(f"  - –ü—Ä–µ–¥–º–µ—Ç–æ–≤ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ: {stats['inventory_count']}")
    
    print("\n7. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ —É—Ä–æ–∂–∞—è...")
    harvest = game.calculate_harvest("tomato", 1.2)
    print(f"–£—Ä–æ–∂–∞–π –ø–æ–º–∏–¥–æ—Ä–∞: {harvest}")
    
    print("\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

def test_seeds():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ–º—è–Ω"""
    print("\nüå± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å–µ–º—è–Ω...")
    
    for seed_type, seed_data in SEEDS.items():
        print(f"\n{seed_data['name']}:")
        print(f"  - –¶–µ–Ω–∞: {seed_data['base_price']} –º–æ–Ω–µ—Ç")
        print(f"  - –í—Ä–µ–º—è —Ä–æ—Å—Ç–∞: {seed_data['growth_time']} —Å–µ–∫—É–Ω–¥")
        print(f"  - –®–∞–Ω—Å –≤ –º–∞–≥–∞–∑–∏–Ω–µ: {seed_data['shop_chance'] * 100}%")
        print(f"  - –í–µ—Å: {seed_data['min_weight']}-{seed_data['max_weight']}g")
        print(f"  - –†–∞–∑–º–µ—Ä: {seed_data['min_size']}-{seed_data['max_size']}cm")

def test_weather():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–≥–æ–¥—ã"""
    print("\nüå§Ô∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–≥–æ–¥—ã...")
    
    for weather_type, weather_data in WEATHER_EFFECTS.items():
        print(f"\n{weather_data['name']}:")
        print(f"  - –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ä–æ—Å—Ç–∞: x{weather_data['growth_multiplier']}")
        print(f"  - –ú–Ω–æ–∂–∏—Ç–µ–ª—å —Ü–µ–Ω: x{weather_data['price_multiplier']}")
        print(f"  - –®–∞–Ω—Å: {weather_data['chance'] * 100}%")

if __name__ == "__main__":
    print("üåæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –§–µ—Ä–º–µ—Ä—Å–∫–æ–π –∏–≥—Ä—ã")
    print("=" * 40)
    
    try:
        test_seeds()
        test_weather()
        test_game_logic()
        
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
